---
title: "Solutions"
format: html
editor: visual
---

# Solutions

::: {.callout-note}
#### Question

- How would you go about finding the maximum time in this data?
- At what time is the number of cases at its maximum? See if you can write code to do this yourself. Hint: See `?which`
:::

```{r results = "hide"}
max_time <- max(times) # Maximum time
# At what time is the number maximum?
max_num <- max(flu_hh[, "num_inf"])
w <- which(flu_hh[, "num_inf"] == max_num) # very useful function which! searches through for matching entries and gives index back
time_max_prop <- flu_hh[w, "time"]
# OR
time_max_prop <- flu_hh[which(flu_hh[, "num_inf"] == max_num), "time"]
```

# Part 3: Solving differential equations with R

::: {.callout-note}
#### Question

Assume you know that the value for `beta` is 2/100000. Can you write a function that considers a range of different parameters for `gamma`, runs the model with these various values and then plots the outcomes with the data? From this what is the best estimate you can get for `gamma`? 

Note that this was output generated with a set value for gamma and so you can find a solution - however in the real world epidemic there is unlikely to be such a perfect fit! 
:::

```{r}
# Run for many values of gamma
gamma_values <- seq(0.2, 0.8, 0.1) # vector of possible gamma values
store_I <- matrix(0, length(gamma_values) * length(times), 3) ### Empty vector where we will store the output

# Run through and solve with each gamma value
for (i in 1:length(gamma_values)) { # Length = how many entries in vector
  # What gamma value in this run?
  gamma_new <- gamma_values[i]
  # New parameter set
  parameters <- c(beta = 2 / 100000, gamma = gamma_new)
  # Run with this new parameter set
  out <- ode(y = init, times = times, func = sir, parms = parameters)
  # Store the number of infecteds this produces
  stored <- cbind(out[, "time"], out[, "I"], gamma_new) # Bind the columns with time, the infected and the new gamma
  store_I[((i - 1) * length(times) + 1):(i * length(times)), ] <- stored # Store in the big matrix
}
# Have a look at what you have...(again wouldn't usually include this in the saved R code)
head(store_I)
colnames(store_I) <- c("Time", "Infecteds", "gamma_new")

# Plot
plot(store_I[, "Time"], store_I[, "Infecteds"], type = "l", xlab = "Time", ylab = "Number")
points(data$time, data$number) # compare visually to data
```

::: {.callout-note}
#### Question

- Store your data for the SIR solution at different gamma values using (as above) with `write.csv()` 

```{r}
write.csv(store_I, here("outputs", "store_I.csv"))
```
:::
